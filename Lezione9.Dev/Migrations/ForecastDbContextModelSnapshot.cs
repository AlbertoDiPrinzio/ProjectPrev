// <auto-generated />
using System;
using Lezione9.Dev.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lezione9.Dev.Migrations
{
    [DbContext(typeof(ForecastDbContext))]
    partial class ForecastDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lezione9.Dev.Data.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Lezione9.Dev.Data.Favcity", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "CityId");

                    b.HasIndex("CityId");

                    b.ToTable("Favcities");
                });

            modelBuilder.Entity("Lezione9.Dev.Data.Giorno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("giorno")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Previsioni");
                });

            modelBuilder.Entity("Lezione9.Dev.Data.GiornoGiornaliera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("GiornoId")
                        .HasColumnType("int");

                    b.Property<int>("avgtemp")
                        .HasColumnType("int");

                    b.Property<int>("humidity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("GiornoId");

                    b.ToTable("PrevisioneGiornalieras");
                });

            modelBuilder.Entity("Lezione9.Dev.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Lezione9.Dev.Data.Favcity", b =>
                {
                    b.HasOne("Lezione9.Dev.Data.City", "City")
                        .WithMany("Favcities")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lezione9.Dev.Data.User", "User")
                        .WithMany("Favcities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lezione9.Dev.Data.GiornoGiornaliera", b =>
                {
                    b.HasOne("Lezione9.Dev.Data.City", "City")
                        .WithMany("Previsioni")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lezione9.Dev.Data.Giorno", "Giorno")
                        .WithMany("PG")
                        .HasForeignKey("GiornoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Giorno");
                });

            modelBuilder.Entity("Lezione9.Dev.Data.City", b =>
                {
                    b.Navigation("Favcities");

                    b.Navigation("Previsioni");
                });

            modelBuilder.Entity("Lezione9.Dev.Data.Giorno", b =>
                {
                    b.Navigation("PG");
                });

            modelBuilder.Entity("Lezione9.Dev.Data.User", b =>
                {
                    b.Navigation("Favcities");
                });
#pragma warning restore 612, 618
        }
    }
}
